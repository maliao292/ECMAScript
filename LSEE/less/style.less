@color: #f00; // 定义变量
@widht: 100px;
#header {
    color: @color;
}

h2 {
    color: @color;
    border: 1px solid #333;
    height: @widht;
}

// 字符串 拼接
@myurl: '1.jpeg';
h2 {
    background: url('../img/@{myurl}');
}

// 选择器 拼接
@homepage: home;
.@{homepage}_map {
    font-size: @widht;
}

// media query 变量  ~ 后不会被编译
@singleQUery: ~"(max-width:768px)";
@media screen and @singleQUery {
    div {
        background: blue;
    }
}

// 变量引用 变量 不好 别用 
* {}

// 混合(不带参数)
.width {
    width: 100px;
    height: 50px;
    border: 1px solid pink;
}

.long {
    // 只是引用了 .widht 的属性
    .width;
}

// 混合(参数)
#height(@widthS) {
    height: 500px;
    width: @widthS;
    background: #00458A;
}

.men {
    #height(10%);
}

/* 高级参数用法 */
.border(){
    border: 1px solid #ccc;
}
.mixin1(...){
    padding: @arguments;
}
.mixin2(@a:1;...){
    margin: @arguments;
}

.div1{
    .border();
    .mixin1(20px 30px 40px 50px)
}

/* 模式匹配与Guard达式 */
.m(red,@padd){ // red 为定义的常量  调用时候  必须也为red
    color: red;
    padding: @padd;
}
.m2(@red,@padd){
    color: @red;
    padding: @padd;
}

.g1{
    .m(red;20px)
}
.g2{
    .m2(green;20px)
}


/* 条件混合 */
.mixin(@a) when(lightness(@a)>=50%){
    background-color: black;
}
.mixin(@a) when(lightness(@a)<50%){
    background-color: white;
}

.mixin(@a){
    color: @a;
}
.meng{
    .mixin(#880)
}
.long{
    .mixin(#887)
}

/* 命名空间 */


  



